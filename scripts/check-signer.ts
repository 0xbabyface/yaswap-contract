import { ethers } from "hardhat";

import {arrayify, splitSignature} from "@ethersproject/bytes";
import * as config from "../deployed-info.json";

(BigInt.prototype as any).toJSON = function () {
  return this.toString();
};

async function main() {
  const [owner] = await ethers.getSigners();
  const checkSigner = await ethers.deployContract("CheckSign");
  await checkSigner.waitForDeployment();

  // const checkSigner = await ethers.getContractAt('CheckSign', config.polygon.checkSign);
  const codeOwner = '0x7C2d769d55f71aa5546334416F50cDF7Fc41457F';

  const abiEncoder = ethers.AbiCoder.defaultAbiCoder();
  const relations = abiEncoder.encode(['address', 'bytes'], [codeOwner, Buffer.from('00iOm6zPG01')])

  console.log(`inviteCode: ${relations}`);

  const message = abiEncoder.encode(['address', 'bytes'], [owner.address, relations]);
  const hash = ethers.keccak256(message);
  console.log(`owner: ${owner.address}`)
  const signature = await owner.signMessage(arrayify(hash));

  let matched = await checkSigner.connect(owner).isValidSigner(relations, signature);
  console.log('matched: ', matched);

  const {v, r, s} = splitSignature(signature);
  console.log(`sig: ${signature}`)
  console.log(`v: ${v}, r: ${r}: s: ${s}`)

  const m2 = await checkSigner.connect(owner).getSignerByrsv(relations, r, s, v);
  console.log(`m2: ${m2}`);

  const signer = ethers.verifyMessage(arrayify(hash), signature);
  console.log(`signer is : ${signer}`)

  // TO decode online transaction
  const fibTrade = await ethers.getContractAt('FibTrade', config.polygon.fibProxy);
  const params = fibTrade.interface.decodeFunctionData('swap', '0x2413b0bd0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a06300000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000a748d6573aca135af68f2635be60cb80278bd8550000000000000000000000000000000000000000000000000000000000000180000000000000000000000000b0fd4c979c7f98b9d78c74c41eeeade945e52bac0000000000000000000000003b86917369b83a6892f553609f3c2f439c184e310000000000000000000000000000000000000000000000000d7b4b5626652f9800000000000000000000000000000000000000000000000000000000000008e0000000000000000000000000000000000000000000000000000000000000001b44205cfb5f2fdf9b7f2f98f06f6e2a56794abe588e4a851ccf5ca3e17827d48745491458e8ac278ff87d6c0ed22c73417cb45ef9a259b84937ef953ff12456250000000000000000000000000000000000000000000000000000000000000724b80c2f090000000000000000000000000000000000000000000000000000000000018775000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a06300000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000d7b4b5626652f97000000000000000000000000000000000000000000000000000000006587d2fa000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027103bfcb475e528f54246f1847ec0e7b53dd88bda4e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000027107a7374873de28b06386013da94cbd9b554f6ac6e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a06300000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000abd56eca2e19be486c7726913bc40d57294f7e5e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000b30306f7a54734172573031000000000000000000000000000000000000000000');

  console.log(`params: ${JSON.stringify(params, null, "  ")}`)
}

main();
